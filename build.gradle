buildscript {
	ext {
		springBootVersion = '1.5.10.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'

group = 'com.riease.gamer'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven {
		name = 'Manni Wood'
		url = 'http://dl.bintray.com/manniwood/maven'
	}
}

configurations {
	providedRuntime
}

dependencies {
	
	// [Database]::start
	compile('com.zaxxer:HikariCP:2.7.4')
	compile 'org.postgresql:pgjdbc-aggregate:42.1.4'
	// [Database]::end
	
	// [myBatis]:start
	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1')
	compile("org.mybatis.spring.boot:mybatis-spring-boot-starter-test:1.3.1")
	// 讓 myBatis generator 支援 java.util.UUID 型別
	compile('com.manniwood:mmpt:2.1.0')
	// 讓 myBatis 支援物理分頁
	compile('com.github.pagehelper:pagehelper-spring-boot-starter:1.2.3')
	// [myBatis]:end
	
	// [apache]
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
	compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
	compile 'commons-beanutils:commons-beanutils:1.9.3'
	compile 'commons-logging:commons-logging:1.2'
	compile 'commons-collections:commons-collections:3.2.2'
	compile 'commons-codec:commons-codec:1.10'
	compile 'commons-io:commons-io:2.5'
	compile 'commons-validator:commons-validator:1.5.1'
	compile 'commons-fileupload:commons-fileupload:1.3.2'
	compile 'org.apache.commons:commons-dbcp2:2.1.1'
	compile 'org.apache.httpcomponents:httpclient:4.5.2'
	compile 'org.apache.commons:commons-email:1.4'
	compile 'org.apache.commons:commons-math3:3.6.1'
	compile 'org.apache.commons:commons-pool2:2.4.2'
	compile 'org.apache.commons:commons-text:1.1'
	// [apache]:end
	
	// jsoup
	compile('org.jsoup:jsoup:1.11.2')

	// [SpringBoot]::start
	compile group: 'net.sourceforge.nekohtml', name: 'nekohtml', version: '1.9.22'
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	// [SpringBoot]::end
	
	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('org.postgresql:postgresql')
	
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
